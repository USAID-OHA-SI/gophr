% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resolve_knownissues.R
\name{resolve_knownissues}
\alias{resolve_knownissues}
\title{Resolve Known Issues}
\usage{
resolve_knownissues(df, remove_cs = TRUE, store_excl = FALSE)
}
\arguments{
\item{df}{standard MSD data frame, typically after its been filtered}

\item{remove_cs}{remove data flagged as central support (CS), default = TRUE}

\item{store_excl}{should the known exclusions be store in the Global Envir?}
}
\value{
df excluding known targets/results issues
}
\description{
This function handles known issues in the MSD. For
example, a mechanism starting mid-year and reporting on TX_CURR
will duplicate TX_CURR targets. This function resolves that by
removing those known cases and stores cases relevant to your data frame.

The best workflow is to filter your dataset down to a country and/or
technical area of interest before running `resolve_knownissues()`. When you
run the function, it will print out any known issues to the console (and can)
even store them to your Global Environment, so it makes sense to limit the
data first to what you are using/care about.

The list of known issues is maintained by USAID/SIEI division. To access the
table requires having a USAID email account and can be accessed via
`browse_knownissues()`.
}
\examples{
\dontrun{

library(tidyverse)
library(glamr)

load_secrets() # or googlesheets4::gs4_auth()

df_msd <- si_path() \%>\%
  return_latest("OU_IM") \%>\%
  read_rds()

df_mwi <- df_msd \%>\%
  filter(operatingunit == "Malawi",
         indicator == "TX_CURR")

df_mwi_resolved <- df_mwi \%>\%
  resolve_knownissues() }
}
\seealso{
[browse_knownissues()] to view table in Google Sheets;
 [set_email()] to store USAID email;
 [load_secrets()] to load credentials into session.
}
